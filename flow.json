[
    {
        "id": "b94612e1869d145c",
        "type": "tab",
        "label": "Smart Grid PDC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "14e69e227013c111",
        "type": "junction",
        "z": "b94612e1869d145c",
        "x": 440,
        "y": 680,
        "wires": [
            [
                "d2d7c41e4763169a"
            ]
        ]
    },
    {
        "id": "d2d7c41e4763169a",
        "type": "junction",
        "z": "b94612e1869d145c",
        "x": 800,
        "y": 660,
        "wires": [
            [
                "21002d414d3d9d13"
            ]
        ]
    },
    {
        "id": "466ddd47a28b6013",
        "type": "poll-state",
        "z": "b94612e1869d145c",
        "name": "Leggi soglia immissione",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputinitially": true,
        "outputonchanged": true,
        "entity_id": "input_number.valore_immissione_pdc",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "758d4dd5d171c668"
            ]
        ]
    },
    {
        "id": "758d4dd5d171c668",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "sogliaImmissioni",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 100,
        "wires": [
            [
                "7179fd18216327c3"
            ]
        ]
    },
    {
        "id": "7179fd18216327c3",
        "type": "debug",
        "z": "b94612e1869d145c",
        "name": "Visualizza valore letto",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "ea6116b466a7c085",
        "type": "poll-state",
        "z": "b94612e1869d145c",
        "name": "Leggi T base PDC",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputinitially": true,
        "outputonchanged": true,
        "entity_id": "input_number.t_base_pdc",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 110,
        "y": 160,
        "wires": [
            [
                "f6776ec03cca1362"
            ]
        ]
    },
    {
        "id": "f6776ec03cca1362",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "tBasePDC",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "7179fd18216327c3"
            ]
        ]
    },
    {
        "id": "afe504581eee630c",
        "type": "poll-state",
        "z": "b94612e1869d145c",
        "name": "Leggi incremento T PDC",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputinitially": true,
        "outputonchanged": true,
        "entity_id": "input_number.incremento_pdc",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "3572068716a22145"
            ]
        ]
    },
    {
        "id": "3572068716a22145",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "tIncrementoPDC",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 220,
        "wires": [
            [
                "7179fd18216327c3"
            ]
        ]
    },
    {
        "id": "3326779daf15e18d",
        "type": "comment",
        "z": "b94612e1869d145c",
        "name": "Lettura valori soglie da input number di HA",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "f53be92da40f4ea5",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "Confronta Dati",
        "func": "// this is passed a payload which is an object with\n// properties outside_temp and inside_temp\n\ncontext.set(msg.topic,msg.payload);\n\nvar soglia = flow.get(\"sogliaImmissioni\");\nvar potenzaEsportata = flow.get(\"potenzaEsportata\");\n\n\nmsg.topic = \"incrementoTemp\";\n\nif (potenzaEsportata >= soglia){\n    msg.payload = \"on\";\n}else{\n    msg.payload = \"STOP\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 400,
        "wires": [
            [
                "dfcc367013bc5f27"
            ]
        ]
    },
    {
        "id": "2f8d075e7d875bd9",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "potenzaEsportata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "f53be92da40f4ea5"
            ]
        ]
    },
    {
        "id": "ef06a86591e6e8e6",
        "type": "trigger-state",
        "z": "b94612e1869d145c",
        "name": "Potenza Esportata",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.potenza_esportata",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [],
        "inputs": 0,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": true,
        "state_type": "num",
        "enableInput": false,
        "x": 90,
        "y": 400,
        "wires": [
            [
                "2f8d075e7d875bd9"
            ],
            []
        ]
    },
    {
        "id": "d980cc59efb44a90",
        "type": "api-current-state",
        "z": "b94612e1869d145c",
        "name": "T esterna < 16.5",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "16.5",
        "halt_if_type": "num",
        "halt_if_compare": "lt",
        "entity_id": "sensor.casa_rotondo_salotto_esterno_temperature",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1200,
        "y": 400,
        "wires": [
            [
                "f5a87d5f966939d3"
            ],
            []
        ]
    },
    {
        "id": "dfcc367013bc5f27",
        "type": "trigger",
        "z": "b94612e1869d145c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 400,
        "wires": [
            [
                "7a1afd1a33a54766"
            ]
        ]
    },
    {
        "id": "7a1afd1a33a54766",
        "type": "api-current-state",
        "z": "b94612e1869d145c",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_smart_grid_pdc",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 980,
        "y": 400,
        "wires": [
            [
                "d980cc59efb44a90"
            ],
            []
        ]
    },
    {
        "id": "f5a87d5f966939d3",
        "type": "api-current-state",
        "z": "b94612e1869d145c",
        "name": "PDC in modalità inverno?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "Winter",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.ariston_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 210,
        "y": 520,
        "wires": [
            [
                "7b5abd1b2fbe60a5"
            ],
            []
        ]
    },
    {
        "id": "37a7fecad46fd38b",
        "type": "comment",
        "z": "b94612e1869d145c",
        "name": "Incremente T ambiente richiesta per la PDC in caso di sovrapproduzione FV",
        "info": "",
        "x": 290,
        "y": 340,
        "wires": []
    },
    {
        "id": "44142add0b612378",
        "type": "api-call-service",
        "z": "b94612e1869d145c",
        "name": "setta T più alta",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "ariston",
        "service": "set_data",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.ariston_zone1"
        ],
        "data": "{\"ch_set_temperature_zone1\":\"{{payload}}\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "fd2177b07114d983"
            ]
        ]
    },
    {
        "id": "7b5abd1b2fbe60a5",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "calcola T da settare",
        "func": "var tBase = flow.get(\"tBasePDC\");\nvar dt = flow.get(\"tIncrementoPDC\");\nvar newTemp = tBase+dt;\nmsg.payload=newTemp;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 520,
        "wires": [
            [
                "4b804d989bc2e760"
            ]
        ]
    },
    {
        "id": "23a13c6063fbf2e0",
        "type": "inject",
        "z": "b94612e1869d145c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1040,
        "wires": [
            [
                "80f2890336fc8d4f"
            ]
        ]
    },
    {
        "id": "80f2890336fc8d4f",
        "type": "api-call-service",
        "z": "b94612e1869d145c",
        "name": "setta T default",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "ariston",
        "service": "set_data",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.ariston_zone1"
        ],
        "data": "{\"ch_set_temperature_zone1\":22}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 320,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "fd2177b07114d983",
        "type": "api-call-service",
        "z": "b94612e1869d145c",
        "name": "avviso T ambiente settata a:",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ T ambiente PDC settata a: {{payload}} 🌡️\",\"title\":\"Smart Grid:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1340,
        "y": 520,
        "wires": [
            [
                "4caa06d25a1d93f3"
            ]
        ]
    },
    {
        "id": "6c93f903188a96e8",
        "type": "poll-state",
        "z": "b94612e1869d145c",
        "name": "Leggi soglia prelievi",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "30",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputinitially": true,
        "outputonchanged": true,
        "entity_id": "input_number.valore_prelievo_pdc",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 110,
        "y": 280,
        "wires": [
            [
                "74ca0033e4962a18"
            ]
        ]
    },
    {
        "id": "74ca0033e4962a18",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "sogliaPrelievi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "7179fd18216327c3"
            ]
        ]
    },
    {
        "id": "a2638406e4474d08",
        "type": "trigger-state",
        "z": "b94612e1869d145c",
        "name": "Potenza Prelevata",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.potenza_prelevata",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [],
        "inputs": 0,
        "outputs": 2,
        "customoutputs": [],
        "outputinitially": true,
        "state_type": "num",
        "enableInput": false,
        "x": 90,
        "y": 620,
        "wires": [
            [
                "06ae7c7bd515ba7b"
            ],
            []
        ]
    },
    {
        "id": "06ae7c7bd515ba7b",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "potenzaPrelevata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "e6e596d25e8f84fc"
            ]
        ]
    },
    {
        "id": "e6e596d25e8f84fc",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "Confronta Dati",
        "func": "// this is passed a payload which is an object with\n// properties outside_temp and inside_temp\n\ncontext.set(msg.topic,msg.payload);\n\nvar sogliaP = flow.get(\"sogliaPrelievi\");\nvar potenzaImportata = flow.get(\"potenzaPrelevata\");\n\n\nmsg.topic = \"incrementoTemp\";\n\nif (potenzaImportata >= sogliaP){\n    msg.payload = \"on\";\n}else{\n    msg.payload = \"STOP\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 620,
        "wires": [
            [
                "2044dc1e35df1366"
            ]
        ]
    },
    {
        "id": "2044dc1e35df1366",
        "type": "trigger",
        "z": "b94612e1869d145c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "6",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 620,
        "wires": [
            [
                "21002d414d3d9d13"
            ]
        ]
    },
    {
        "id": "21002d414d3d9d13",
        "type": "api-current-state",
        "z": "b94612e1869d145c",
        "name": "automazione attiva?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.automazione_smart_grid_pdc",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1000,
        "y": 620,
        "wires": [
            [
                "a9da515a131aa2e7"
            ],
            []
        ]
    },
    {
        "id": "a9da515a131aa2e7",
        "type": "api-current-state",
        "z": "b94612e1869d145c",
        "name": "PDC in modalità inverno?",
        "server": "260765119bb2ca8e",
        "version": 3,
        "outputs": 2,
        "halt_if": "Winter",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.ariston_mode",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1270,
        "y": 620,
        "wires": [
            [
                "25204f594595b4c0"
            ],
            []
        ]
    },
    {
        "id": "393c289fd9a82578",
        "type": "api-call-service",
        "z": "b94612e1869d145c",
        "name": "setta T default",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "ariston",
        "service": "set_data",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "climate.ariston_zone1"
        ],
        "data": "{\"ch_set_temperature_zone1\":\"{{payload}}\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 960,
        "y": 760,
        "wires": [
            [
                "b01657395bdc2739"
            ]
        ]
    },
    {
        "id": "b01657395bdc2739",
        "type": "api-call-service",
        "z": "b94612e1869d145c",
        "name": "avviso T ambiente settata a:",
        "server": "260765119bb2ca8e",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "telegramcarmelo",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"🌡️ T ambiente PDC settata a: {{payload}} 🌡️\",\"title\":\"Smart Grid:\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1200,
        "y": 760,
        "wires": [
            [
                "442b5337d0b1b33d"
            ]
        ]
    },
    {
        "id": "25204f594595b4c0",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "tDefaultPDC",
        "func": "var obtainedData = flow.get(\"tBasePDC\");\nmsg.payload = obtainedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 760,
        "wires": [
            [
                "2097c16bb84fd002"
            ]
        ]
    },
    {
        "id": "784a3b08449d3b39",
        "type": "trigger-state",
        "z": "b94612e1869d145c",
        "name": "T esterna > 19.5",
        "server": "260765119bb2ca8e",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityid": "sensor.casa_rotondo_salotto_esterno_temperature",
        "entityidfiltertype": "exact",
        "debugenabled": false,
        "constraints": [
            {
                "targetType": "this_entity",
                "targetValue": "",
                "propertyType": "current_state",
                "propertyValue": "new_state.state",
                "comparatorType": ">=",
                "comparatorValueDatatype": "str",
                "comparatorValue": "19.5"
            }
        ],
        "inputs": 0,
        "outputs": 3,
        "customoutputs": [
            {
                "messageType": "payload",
                "messageValue": "STOP",
                "messageValueType": "str",
                "comparatorPropertyType": "current_state",
                "comparatorPropertyValue": "new_state.state",
                "comparatorType": "<",
                "comparatorValue": "19.5",
                "comparatorValueDataType": "num"
            }
        ],
        "outputinitially": true,
        "state_type": "num",
        "enableInput": false,
        "x": 80,
        "y": 700,
        "wires": [
            [
                "5a9e54fc757a585a"
            ],
            [],
            [
                "5a9e54fc757a585a"
            ]
        ]
    },
    {
        "id": "5a9e54fc757a585a",
        "type": "trigger",
        "z": "b94612e1869d145c",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "STOP",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 680,
        "wires": [
            [
                "14e69e227013c111"
            ]
        ]
    },
    {
        "id": "a01e3d879ca6b55c",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "calcola T da settare",
        "func": "var tBase = flow.get(\"tBasePDC\");\nvar dt = flow.get(\"tIncrementoPDC\");\nvar tOld = flow.get(\"tImpostata\")\nvar newTemp = tBase+dt;\nmsg.payload=newTemp;\n\nif(tOld != newTemp){\n    flow.set(\"tImpostata\", newTemp);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 880,
        "wires": [
            [
                "b302c93e7c945ecb"
            ]
        ]
    },
    {
        "id": "c77de22d022b549c",
        "type": "inject",
        "z": "b94612e1869d145c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 880,
        "wires": [
            [
                "a01e3d879ca6b55c"
            ]
        ]
    },
    {
        "id": "b302c93e7c945ecb",
        "type": "debug",
        "z": "b94612e1869d145c",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 880,
        "wires": []
    },
    {
        "id": "a6f07f1bc6a08482",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "👁️ quanto é il dato.flow tImpostata?",
        "func": "var obtainedData = flow.get(\"tImpostata\");\nmsg.payload = obtainedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "82a20c86fc8d3fd7"
            ]
        ],
        "info": "interrogo il dato flow \"test2corso4\".\n\nPosso interrogarlo solo all'interno di questo flow"
    },
    {
        "id": "93a763936d313ef1",
        "type": "inject",
        "z": "b94612e1869d145c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 940,
        "wires": [
            [
                "a6f07f1bc6a08482"
            ]
        ]
    },
    {
        "id": "82a20c86fc8d3fd7",
        "type": "debug",
        "z": "b94612e1869d145c",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 940,
        "wires": []
    },
    {
        "id": "2097c16bb84fd002",
        "type": "switch",
        "z": "b94612e1869d145c",
        "name": "Temp già impostata?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "tImpostata",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 720,
        "y": 760,
        "wires": [
            [
                "393c289fd9a82578"
            ]
        ]
    },
    {
        "id": "442b5337d0b1b33d",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "tImpostata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4caa06d25a1d93f3",
        "type": "change",
        "z": "b94612e1869d145c",
        "name": "registra il dato",
        "rules": [
            {
                "t": "set",
                "p": "tImpostata",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "4b804d989bc2e760",
        "type": "switch",
        "z": "b94612e1869d145c",
        "name": "Temp già impostata?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "tImpostata",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 520,
        "wires": [
            [
                "44142add0b612378"
            ]
        ]
    },
    {
        "id": "25968f59c7d49e6c",
        "type": "function",
        "z": "b94612e1869d145c",
        "name": "👁️ quanto é il dato.flow tImpostataDef?",
        "func": "var obtainedData = flow.get(\"tImpostataDef\");\nmsg.payload = obtainedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 980,
        "wires": [
            [
                "aeb698fb2d39777d"
            ]
        ],
        "info": "interrogo il dato flow \"test2corso4\".\n\nPosso interrogarlo solo all'interno di questo flow"
    },
    {
        "id": "443a9b61eec2bdf8",
        "type": "inject",
        "z": "b94612e1869d145c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 980,
        "wires": [
            [
                "25968f59c7d49e6c"
            ]
        ]
    },
    {
        "id": "aeb698fb2d39777d",
        "type": "debug",
        "z": "b94612e1869d145c",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 980,
        "wires": []
    },
    {
        "id": "260765119bb2ca8e",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    }
]